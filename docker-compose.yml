version: "3.9"

services:
  bot:
    image: ghcr.io/dsodx/kerka:latest
    restart: always
    environment:
      - BOT_TOKEN
      - PROVIDER_TOKEN
      - REDIS_DSN
      - POSTGRES_DSN
      - WEBAPP_HOST
      - WEBAPP_PORT
      - WEBAPP_URL
      - ADMIN_IDS_RAW
    ports:
      - "${WEBAPP_PORT}:${WEBAPP_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - "./logs/info.log:/app/logs/info.log"
      - "./logs:warn.log:/app/logs/warn.log"

  postgres:
    image: postgres:15.3
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - APP_USER
      - APP_PASSWORD
      - APP_DB
    healthcheck:
      test: "pg_isready -U ${APP_USER} -d ${APP_DB}"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    volumes:
      - "./storage/psql-init.sh:/docker-entrypoint-initdb.d/init-user-db.sh:ro"
      - "./storage/psql:/var/lib/postgresql/data"

  redis:
    image: redis:7.0.11
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    restart: always
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    volumes:
      - "./storage/redis:/data"
